# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks. 
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.1
  aws-ecr: circleci/aws-ecr@6.15
  aws-ecs: circleci/aws-ecs@2.0.0
  aws-cli: circleci/aws-cli@2.0.2

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build:  
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/node
    docker:
      - image: cimg/node:14.17.0
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      # Checkout the code as the first step.
      - checkout
      # Next, the node orb's install-packages step will install the dependencies from a package.json.
      # The orb install-packages step will also automatically cache them for faster future runs.
      # - node/install-packages
      # If you are using yarn instead npm, remove the line above and uncomment the two lines below.
      - node/install-packages:
          pkg-manager: yarn 
      - run:
          name: Run tests
          command: yarn test


workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  dev: 
    jobs:
      - build
      - request-approval:
          type: approval
          requires:
            - build
          # filters: &filters-develop
          #   branches:
          #     only:
          #       develop
          #   tags:
          #     ignore: /.*/
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          region: AWS_DEFAULT_REGION
          repo: '${MY_APP_PREFIX}'
          tag: '${CIRCLE_SHA1}'
          requires:
            - request-approval
          # filters:
          #   <<: *filters-develop
      # - aws-ecs/deploy-service-update:
      #     cluster-name: 'arn:aws:ecs:eu-west-3:998243642477:cluster/consensys'
      #     container-image-name-updates: 'container=ibegman-front,tag=${CIRCLE_SHA1}'
      #     family: consensys-cola
      #     service-name: ibegman-dev-front
      #     force-new-deployment: true
      #     requires:
      #       - aws-ecr/build-and-push-image
          # filters:
          #   <<: *filters-develop
